@{
    ViewBag.Title = "Color By Number Grid";
}
<head>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery-tabledit@1.0.0/jquery.tabledit.min.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.tabledit.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.9.1/underscore-min.js"></script>



</head>
<html>
<script>
    var lastClicked;
    var numRows = 20;
    var numCols = 19;
    var numColors = 1;
    var maxColors = 5;
    var gridShowing = false;
    var useArray = new Array();
    var uniqueArr = new Array();
    var suggestedColorsArray = new Array();

    var colorValueArray = [];

    var superYoshiArray = [
        [9, 9, 9, 9, 9, 9, 9, 8, 8, 9, 8, 8, 9, 9, 9, 9, 9, 9, 9],
        [9, 9, 9, 9, 9, 9, 8, 6, 6, 8, 6, 6, 8, 9, 9, 9, 9, 9, 9],
        [9, 9, 9, 9, 9, 8, 7, 6, 0, 0, 0, 0, 0, 8, 9, 9, 9, 9, 9],
        [9, 9, 8, 8, 8, 8, 7, 0, 0, 8, 0, 8, 0, 8, 9, 9, 9, 9, 9],
        [9, 8, 5, 5, 5, 8, 0, 0, 0, 8, 0, 8, 0, 8, 9, 9, 9, 9, 9],
        [9, 8, 5, 5, 8, 8, 0, 0, 0, 0, 0, 0, 0, 8, 8, 8, 9, 9, 9],
        [9, 8, 8, 8, 6, 6, 8, 0, 0, 0, 8, 0, 8, 6, 6, 6, 8, 9, 9],
        [8, 5, 8, 6, 6, 6, 6, 8, 8, 8, 6, 8, 6, 6, 0, 0, 6, 8, 9],
        [5, 5, 8, 6, 6, 6, 0, 0, 0, 6, 6, 6, 6, 6, 8, 6, 8, 6, 8],
        [5, 5, 8, 7, 6, 0, 0, 0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 8],
        [8, 8, 8, 7, 6, 0, 0, 0, 0, 8, 6, 6, 6, 6, 6, 6, 6, 6, 8],
        [9, 8, 8, 7, 7, 0, 0, 0, 0, 8, 7, 6, 6, 6, 6, 6, 6, 6, 8],
        [9, 8, 5, 8, 7, 7, 0, 0, 8, 8, 7, 7, 6, 6, 6, 6, 6, 6, 8],
        [9, 9, 8, 8, 8, 7, 7, 0, 0, 8, 7, 7, 7, 7, 6, 6, 6, 8, 9],
        [9, 9, 8, 5, 8, 7, 6, 0, 0, 0, 8, 7, 7, 7, 7, 8, 8, 9, 9],
        [8, 8, 8, 8, 7, 6, 6, 0, 0, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9],
        [5, 8, 8, 8, 7, 6, 0, 0, 0, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9],
        [8, 8, 8, 6, 6, 6, 6, 0, 0, 8, 0, 6, 8, 9, 9, 9, 9, 9, 9],
        [8, 7, 7, 6, 6, 8, 0, 0, 0, 8, 8, 0, 6, 8, 9, 9, 9, 9, 9],
        [6, 6, 6, 6, 8, 0, 0, 0, 0, 8, 8, 8, 6, 8, 9, 9, 9, 9, 9]
    ];

    var superMarioArray = [
        [5, 5, 5, 5, 5, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
        [5, 5, 4, 2, 2, 2, 2, 0, 2, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5],
        [5, 4, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5],
        [4, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5],
        [4, 2, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 5, 5, 5, 5, 5, 5, 5],
        [4, 4, 4, 3, 3, 3, 4, 3, 4, 3, 4, 5, 5, 5, 5, 5, 5, 5, 5],
        [3, 4, 4, 3, 3, 3, 4, 3, 4, 3, 4, 5, 5, 5, 5, 5, 5, 5, 5],
        [3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 5, 5, 5, 5, 5, 5, 5],
        [3, 3, 4, 3, 3, 4, 3, 3, 3, 3, 3, 4, 5, 5, 5, 5, 5, 5, 5],
        [4, 3, 3, 3, 4, 4, 4, 4, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5],
        [5, 4, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5],
        [5, 5, 4, 4, 3, 3, 3, 3, 3, 4, 5, 5, 4, 4, 5, 5, 5, 5, 5],
        [5, 4, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 5, 5, 5, 5],
        [4, 2, 2, 2, 2, 4, 6, 4, 2, 2, 4, 4, 3, 3, 4, 5, 5, 5, 5],
        [4, 2, 2, 2, 2, 4, 4, 6, 4, 2, 2, 4, 4, 3, 4, 5, 5, 5, 5],
        [2, 2, 4, 4, 0, 2, 4, 6, 4, 2, 2, 2, 4, 4, 5, 4, 4, 4, 4],
        [2, 4, 3, 3, 3, 4, 4, 0, 6, 4, 4, 4, 0, 4, 4, 4, 7, 7, 4],
        [4, 3, 3, 3, 3, 3, 4, 0, 6, 6, 6, 6, 0, 6, 4, 7, 7, 7, 7],
        [4, 3, 3, 3, 3, 3, 4, 6, 6, 6, 6, 6, 6, 6, 4, 7, 7, 7, 7]
    ];

    var princessPeachArray = [
        [7, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 7, 7],
        [7, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 7, 7],
        [7, 7, 8, 3, 3, 3, 3, 3, 3, 8, 8, 3, 3, 8, 8, 3, 3, 8, 7],
        [7, 8, 3, 3, 3, 3, 3, 3, 8, 8, 4, 8, 8, 4, 8, 3, 3, 8, 7],
        [7, 7, 8, 3, 3, 8, 8, 8, 4, 4, 8, 4, 4, 8, 4, 8, 8, 7, 7],
        [7, 7, 8, 3, 3, 8, 4, 8, 4, 4, 8, 4, 4, 8, 4, 8, 7, 7, 7],
        [7, 8, 3, 3, 3, 8, 4, 8, 4, 4, 4, 4, 4, 4, 4, 8, 7, 7, 7],
        [8, 3, 3, 3, 3, 3, 7, 4, 4, 4, 4, 4, 4, 4, 4, 8, 7, 7, 7],
        [8, 3, 3, 3, 3, 3, 3, 8, 4, 4, 4, 6, 6, 4, 8, 8, 8, 7, 7],
        [7, 8, 3, 3, 3, 3, 3, 8, 8, 4, 4, 4, 4, 8, 8, 3, 8, 7, 7],
        [8, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 8, 6, 6, 8, 8, 7, 7, 7],
        [8, 3, 3, 8, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 8, 7, 7],
        [8, 3, 3, 8, 5, 5, 5, 5, 6, 5, 5, 3, 5, 8, 5, 5, 8, 7, 7],
        [7, 8, 3, 3, 8, 8, 8, 8, 8, 5, 3, 7, 3, 5, 8, 8, 8, 7, 7],
        [7, 7, 8, 3, 3, 8, 4, 4, 8, 5, 3, 7, 3, 5, 8, 4, 8, 7, 7],
        [7, 8, 3, 3, 3, 8, 4, 4, 8, 5, 5, 3, 5, 8, 0, 8, 8, 7, 7],
        [7, 7, 8, 8, 8, 8, 4, 8, 0, 8, 5, 5, 5, 8, 0, 0, 8, 7, 7],
        [7, 7, 7, 7, 8, 6, 8, 0, 0, 0, 8, 8, 5, 8, 0, 8, 8, 7, 7],
        [7, 7, 7, 7, 8, 6, 6, 8, 8, 0, 0, 0, 8, 0, 0, 8, 7, 7, 7],
        [7, 7, 7, 8, 6, 6, 6, 6, 8, 8, 0, 0, 8, 0, 8, 8, 7, 7, 7]
    ];

    var i = 1;
    var numColors;

    function getUniqueArray(arrPam) {
        uniqueArr = [].concat(...arrPam).filter((e, i, arrPam) => { return arrPam.indexOf(e) === i }).sort();
    }

    function getNumColors(arrPam) {
        uniqueArr = [].concat(...arrPam).filter((e, i, arrPam) => { return arrPam.indexOf(e) === i }).count();
    }

    function makeColorsTable() {
        var len = uniqueArr.length;
        //alert('Unique Array Length - len: ' + len);
        var tablearea = document.getElementById('colorsListTable'); //div name
        var table = document.createElement('table');
        table.id = "tblSetColors";
        //$("#tblSetColors").bind("DOMSubtreeModified", function () {
        //    alert("Hurry table changed");
        //});
        var tr = [];
        var i;
        var j;
        var k;
        var headerArray;

        headerArray = ["Paint By Number:", "Suggested Color:", "Selected Color"];
        var header = table.createTHead();
        var row = header.insertRow(0);
        for (k = 0; k < headerArray.length; k++) {
            // Insert a new cell (<td>) at the first position of the "new" <tr> element:
            var cell = row.insertCell(0);
            // Add some bold text in the new cell:
            cell.innerHTML = "<b>" + headerArray[k] + "</b>";
        }

        //alert('Header Array: ' + headerArray);

        for (i = 1; i <= len; i++) {
            tr[i] = document.createElement('tr');
            for (j = 1; j < 2; j++) {


                var td1 = document.createElement('td');
                var td2 = document.createElement('td');
                var td3 = document.createElement('td');

                var text1 = document.createTextNode(uniqueArr[i - 1]);
                var text2 = document.createTextNode(colorValueArray[i - 1]);
                var text3 = document.createTextNode(colorValueArray[i - 1]);

                td1.appendChild(text1);
                td2.appendChild(text2);
                td3.appendChild(text3);
                tr[i].appendChild(td1);
                tr[i].appendChild(td2);
                tr[i].appendChild(td3);
            }
            table.appendChild(tr[i]);

        }

        tablearea.appendChild(table);
        document.getElementById("colorsListTable").style.border = "1px solid black";

        $(function () {
            $("td").dblclick(function () {
                var OriginalContent = $(this).text(); $(this).addClass("cellEditing");
                $(this).html("<input type='text' value='" + OriginalContent + "' />");
                $(this).children().first().focus();
                $(this).children().first().keypress(function (e) {
                    if (e.which == 13) {
                        var newContent = $(this).val();
                        $(this).parent().text(newContent); $(this).parent().removeClass("cellEditing");

                        setColorValueArray();
                        setColors();
                    }

                });


                $(this).children().first().blur(function () {
                    $(this).parent().text(OriginalContent);
                    $(this).parent().removeClass("cellEditing");

                });



            });


        });
    }


    var maxColors = 10; //Input fields increment limitation
    var x = 1; //Initial field counter is 1

    var colorValueArray = new Array();


    function setInitialColors(arrPam) {

        switch (arrPam) {
            case superYoshiArray:
                colorValueArray = ["white", "red", "lightblue", "darkblue", "black", "pink"];
                break;
            case princessPeachArray:
                colorValueArray = ["white", "yellow", "tan", "pink", "hotpink", "blue", "black"];
                break;
            case superMarioArray:
                colorValueArray = ["yellow", "tan", "pink", "hotpink", "blue", "black"];
                break;
            default:
                break;
        }
    }

    var tempColorArray;
    var setColorsTableArray = [];
    function setColorValueArray() {
        //alert(setColorsTableArray);

        $("#tblSetColors tr").each(function () {
            var arrayOfThisRow = [];
            var tableData = $(this).find('td:eq(1)');
            if (tableData.length > 0) {
                tableData.each(function () { arrayOfThisRow.push($(this).text()); });
                setColorsTableArray.push(arrayOfThisRow);
            }

        });

        colorValueArray = setColorsTableArray;
       

    }

    function setColors() {

        $('#drawDraw tr td').each(function () {
            var cellValue = $(this).html();
            if (!isNaN(parseFloat(cellValue))) {
                for (p = 0; p < maxColors; p++) {
                    if (cellValue == p) {
                        $(this).css('background-color', colorValueArray[jQuery.inArray(parseInt(cellValue), uniqueArr) + 1]);
                        $(this).css('color', colorValueArray[jQuery.inArray(parseInt(cellValue), uniqueArr) + 1]);
                    }

                }
            }
        });
    }

    function readyToDraw() {

        var finishedDrawingGrid = clickableDrawingGrid(numRows,
            numCols,
            function (el, row, col, i) {
                //el.className='clicked';
                if (lastClicked) lastClicked.className = '';
                lastClicked = el;

                $(el).each(function () {
                    var cellValue = $(this).html();
                    if (!isNaN(parseFloat(cellValue))) {
                        //Set Colors:
                        //alert('Max Colors: ' + maxColors);
                        //alert(colorValueArray);
                        for (p = 0; p < maxColors; p++) {
                            if (cellValue == p) {
                                //alert(cellValue);
                                //alert(p);
                                //alert('position in unique: ' + jQuery.inArray(parseInt(cellValue), uniqueArr));
                                //alert('color: ' + colorValueArray[jQuery.inArray(parseInt(cellValue), uniqueArr)]);
                                $(this).css('background-color', colorValueArray[jQuery.inArray(parseInt(cellValue), uniqueArr) + 1]);
                                $(this).css('color', colorValueArray[jQuery.inArray(parseInt(cellValue), uniqueArr) + 1]);
                            }

                        }
                    }
                });
            });





        document.getElementById("drawDraw").appendChild(finishedDrawingGrid);

        function clickableDrawingGrid(rows, cols, callback) {
            var i = 0;
            var drawingGrid = document.createElement('table');
            drawingGrid.className = 'drawingGrid';
            for (var r = 0; r < rows; ++r) {
                var tr = drawingGrid.appendChild(document.createElement('tr'));
                for (var c = 0; c < cols; ++c) {
                    var cell = tr.appendChild(document.createElement('td'));
                    cell.innerHTML = useArray[r][c];
                    cell.addEventListener('mouseover', (function (el, r, c, i) {
                        return function () {
                            callback(el, r, c, i);
                        }
                    })(cell, r, c, i), false);
                }
            }
            return drawingGrid;
        }

        gridShowing = true;
    };

    $('nav li ul').hide().removeClass('fallback');
    $('nav li').hover(
        function () {
            $('ul', this).stop().slideDown(100);
        },
        function () {
            $('ul', this).stop().slideUp(100);
        }
    );

    function startProgram(arr) {
        $('#drawDraw').empty();
        getUniqueArray(arr);
        setInitialColors(arr);
        $('#colorsListTable').empty();
        makeColorsTable();
        setColorValueArray();
        useArray = arr;
        readyToDraw();
    }

    function updateColors(arr) {
        //setInitialColors(arr);
        //$('#colorsListTable').empty();
        // makeColorsTable();
        //setColorValueArray();
        //useArray = arr;
        //readyToDraw();
    }

</script>

<style>

    * {
        font-family: Consolas font-size:2em;
    }

    .editableTable {
        border: solid 1px;
        width: 100%
    }

        .editableTable td {
            border: solid 1px;
        }

        .editableTable .cellEditing {
            padding: 0;
        }

            .editableTable .cellEditing input[type=text] {
                width: 100%;
                border: 0;
                background-color: rgb(255,253,210);
            }

    .drawingGrid {
        margin: 1em auto;
        border-collapse: collapse
    }

        .drawingGrid td {
            cursor: pointer;
            width: 30px;
            height: 30px;
            border: 1px solid #ccc;
            text-align: center;
            font-family: sans-serif;
            font-size: 13px;
        }


    nav {
        background: #FFF;
        float: left;
    }

        nav ul {
            text-align: center;
        }

            nav ul li {
                float: left;
                display: inline;
            }

                nav ul li:hover {
                    background: #E6E6E6;
                }

                nav ul li a {
                    display: block;
                    padding: 15px 25px;
                    color: #444;
                }

                nav ul li ul {
                    position: absolute;
                    width: 110px;
                    background: #FFF;
                }

                    nav ul li ul li {
                        width: 110px;
                    }

                        nav ul li ul li a {
                            display: block;
                            padding: 15px 10px;
                            color: #444;
                        }

                        nav ul li ul li:hover a {
                            background: #F7F7F7;
                        }

                    nav ul li ul.fallback {
                        display: none;
                    }

                nav ul li:hover ul.fallback {
                    display: block;
                }

    table, th, td {
        border-collapse: collapse;
        border: 1px solid black;
    }
</style>

<body>

    <ul>
        <li><a href="#">Pick Your Colors</a></li>
        <li>
            <a href="#">Pick Your Character</a>
            <ul class="fallback">
                <li><a href="#" onclick="startProgram(superMarioArray)">Super Mario</a></li>
                <li><a href="#" onclick="startProgram(princessPeachArray)">Princess Peach</a></li>
                <li><a href="#" onclick="startProgram(superYoshiArray)">Yoshi</a></li>
            </ul>
        </li>
        <li>
    </ul>
    <div id="drawDraw">

    </div>

    <div id="colorsListTable" contenteditable>
        <button onclick="setColorValueArray()">Update Color Array</button>
    </div>

</body>
</html>





